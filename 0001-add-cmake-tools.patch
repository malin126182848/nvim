From c67c0ff78080868e82ef2214e59982593113195b Mon Sep 17 00:00:00 2001
From: malin <malin@300624.cn>
Date: Fri, 30 Sep 2022 15:59:55 +0800
Subject: [PATCH] add cmake tools

---
 chadrc.lua            |  4 ++--
 mappings.lua          |  1 +
 plugins/cmake.lua     | 17 +++++++++++++++++
 plugins/init.lua      |  9 ++++++++-
 plugins/nvim_dap.lua  | 14 +++++++-------
 plugins/overrides.lua |  1 +
 6 files changed, 36 insertions(+), 10 deletions(-)
 create mode 100644 plugins/cmake.lua

diff --git a/chadrc.lua b/chadrc.lua
index e1dbcd5..99ebcff 100644
--- a/chadrc.lua
+++ b/chadrc.lua
@@ -4,8 +4,8 @@ M.plugins = require("custom.plugins")
 
 M.ui = {
   -- theme stuff
-  theme = "onedark",
-  theme_toggle = { "onedark", "one_light" },
+	theme = "vscode_dark",
+	theme_toggle = { "catppuccin_latte", "vscode_dark" },
 
   transparency = false,
   -- highlight groups!
diff --git a/mappings.lua b/mappings.lua
index d6a6d5a..548916a 100644
--- a/mappings.lua
+++ b/mappings.lua
@@ -36,6 +36,7 @@ M.navigation = {
 
 M.lspconfig = {
   n = {
+    ["K"] = { "<cmd>lua vim.lsp.buf.hover()<CR>", "lsp hover" },
     ["<leader>lh"] = {
       function()
         local buf = vim.api.nvim_get_current_buf()
diff --git a/plugins/cmake.lua b/plugins/cmake.lua
new file mode 100644
index 0000000..72920af
--- /dev/null
+++ b/plugins/cmake.lua
@@ -0,0 +1,17 @@
+local ok, cmakeTools = pcall(require, "cmake-tools")
+
+if not ok then
+  return print "Error loading cmake tools"
+end
+
+cmakeTools.setup {
+  cmake_command = "cmake",
+  cmake_build_directory = "build",
+  cmake_build_type = "Debug",
+  cmake_generate_options = { "-D", "CMAKE_EXPORT_COMPILE_COMMANDS=1" },
+  cmake_build_options = {},
+  cmake_console_size = 10, -- cmake output window height
+  cmake_show_console = "always", -- "always", "only_on_error"
+  cmake_dap_configuration = { name = "cpp", type = "codelldb", request = "launch" }, -- dap configuration, optional
+  cmake_dap_open_command = require("dap").repl.open, -- optional
+}
diff --git a/plugins/init.lua b/plugins/init.lua
index cd8683c..efc66e8 100644
--- a/plugins/init.lua
+++ b/plugins/init.lua
@@ -6,7 +6,7 @@ return {
 
   ["goolord/alpha-nvim"] = {
     disable = false,
-    -- override_options = overrides.alpha,
+    override_options = overrides.alpha,
   },
 
   ["neovim/nvim-lspconfig"] = {
@@ -127,4 +127,11 @@ return {
       require("custom.plugins.nvim_dap_ui")
     end,
   },
+
+  ["Civitasv/cmake-tools.nvim"] = {
+    after = "nvim-dap",
+    config = function ()
+      require("custom.plugins.cmake")
+    end,
+  }
 }
diff --git a/plugins/nvim_dap.lua b/plugins/nvim_dap.lua
index 859952a..2ef30c0 100644
--- a/plugins/nvim_dap.lua
+++ b/plugins/nvim_dap.lua
@@ -41,18 +41,17 @@ dap.listeners.after['event_initialized']['me'] = function()
       end
     end
   end
-  api.nvim_set_keymap(
-  'n', 'K', '<cmd>lua require("dapui").eval()<CR>', { silent = true })
+  api.nvim_set_keymap('n', 'K', '<cmd>lua require("dapui").eval()<CR>', { silent = true })
 end
 
 dap.listeners.after['event_terminated']['me'] = function()
   for _, keymap in pairs(keymap_restore) do
     api.nvim_buf_set_keymap(
-    keymap.buffer,
-    keymap.mode,
-    keymap.lhs,
-    keymap.rhs,
-    { silent = keymap.silent == 1 }
+      keymap.buffer,
+      keymap.mode,
+      keymap.lhs,
+      keymap.rhs,
+      { silent = keymap.silent == 1 }
     )
   end
   keymap_restore = {}
@@ -80,6 +79,7 @@ dap.configurations.cpp = {
     end,
     cwd = '${workspaceFolder}',
     stopOnEntry = true,
+    terminal = 'integrated',
   },
 }
 
diff --git a/plugins/overrides.lua b/plugins/overrides.lua
index f317e65..a3d4119 100644
--- a/plugins/overrides.lua
+++ b/plugins/overrides.lua
@@ -86,6 +86,7 @@ M.mason = {
     "cmake-language-server",
 
     -- shell
+    "bash-language-server",
     "shfmt",
     "shellcheck",
   },
-- 
2.37.3
